# Inline-issue snapshot 2025-09-08 19:48:35
# Columns:  timestamp  path:line  tag  priority  owner  date  category  id  message
2025-09-08 19:48:35  README.md:29                       TODO   critical  -         -           -         -    ` - Critical priority (shown in red)
2025-09-08 19:48:35  README.md:42                       TODO   critical  alice     2025-01-10  -         -    Deploy hotfix`
2025-09-08 19:48:35  README.md:30                       TODO   high      -         -           -         -    ` - High priority (shown in orange)
2025-09-08 19:48:35  CLAUDE.md:124                      TODO   normal    -         -           -         -    `, `BUG:`, `FIXME:`, `XXX:`, `HACK:`
2025-09-08 19:48:35  README.md:11                       TODO   normal    -         -           -         -    …`, `# BUG: …`).
2025-09-08 19:48:35  README.md:22                       TODO   normal    -         -           -         -    message here`
2025-09-08 19:48:35  README.md:23                       BUG    normal    -         -           -         -    message here`
2025-09-08 19:48:35  README.md:24                       FIXME  normal    -         -           -         -    message here */`
2025-09-08 19:48:35  README.md:31                       TODO   normal    -         -           -         -    ` - Normal priority (default)
2025-09-08 19:48:35  README.md:37                       TODO   normal    username  -           -         -    message` - Assign to a person
2025-09-08 19:48:35  README.md:38                       TODO   normal    -         2025-01-15  -         -    message` - Add due dates
2025-09-08 19:48:35  README.md:39                       TODO   normal    -         auth        -         -    message` - Group by module/feature
2025-09-08 19:48:35  README.md:40                       TODO   normal    -         -           -         #42  message` or `BUG: (REF-123): message` - Link to tickets
2025-09-08 19:48:35  src/adapters/console-logger.ts:10  TODO   normal    -         -           -         -    Replace with structured logging (JSON) and correlation IDs (requestId) for tracing.
2025-09-08 19:48:35  src/adapters/console-logger.ts:11  TODO   normal    -         -           -         -    Add sinks/transports (e.g., to file, HTTP, OpenTelemetry) with backpressure handling.
2025-09-08 19:48:35  src/config.ts:2                    TODO   normal    -         -           -         -    Load from environment and/or JSON file; validate with zod.
2025-09-08 19:48:35  src/config.ts:3                    TODO   normal    -         -           -         -    Manage secrets via environment/keystore; avoid committing secrets.
2025-09-08 19:48:35  src/http/handlers/echo.ts:4        TODO   normal    -         -           -         -    Validate request body with zod schema; sanitize fields before echoing back.
2025-09-08 19:48:35  src/http/handlers/echo.ts:5        TODO   normal    -         -           -         -    Document this endpoint in OpenAPI once schema layer is added.
2025-09-08 19:48:35  src/http/middleware.ts:67          TODO   normal    -         -           -         -    Authentication/Authorization middleware (JWT/OAuth/session) with RBAC/ABAC policies.
2025-09-08 19:48:35  src/http/middleware.ts:68          TODO   normal    -         -           -         -    Request validation & sanitization (zod) per route -> 400 with problem+json.
2025-09-08 19:48:35  src/http/middleware.ts:69          TODO   normal    -         -           -         -    Rate limiting (token bucket/redis) and IP throttling. 429 Too Many Requests.
2025-09-08 19:48:35  src/http/middleware.ts:70          TODO   normal    -         -           -         -    Monitoring/metrics (OpenTelemetry), structured logs with requestId tracing.
2025-09-08 19:48:35  src/http/middleware.ts:71          TODO   normal    -         -           -         -    Security: add CSP, CSRF protection (for stateful flows), and HSTS.
2025-09-08 19:48:35  src/http/middleware.ts:72          TODO   normal    -         -           -         -    CORS: per-environment policy and preflight caching (Access-Control-Max-Age).
2025-09-08 19:48:35  src/http/middleware.ts:73          TODO   normal    -         -           -         -    Request/response middleware pipeline with typed context augmentation.
2025-09-08 19:48:35  src/http/response.ts:34            TODO   normal    -         -           -         -    Standardize error format with problem+json (RFC 7807) and error codes/enums.
2025-09-08 19:48:35  src/http/response.ts:35            TODO   normal    -         -           -         -    Add content negotiation for XML/Protobuf/etc. if needed.
2025-09-08 19:48:35  src/http/response.ts:36            NOTE   normal    -         -           -         -    Keep response helpers pure and side-effect free.
2025-09-08 19:48:35  src/http/router.ts:22              TODO   normal    -         -           -         -    Add path params (e.g., /users/:id) with fast pattern matching and param extraction.
2025-09-08 19:48:35  src/http/router.ts:23              TODO   normal    -         -           -         -    Add route-level middleware and input/output schema validation.
2025-09-08 19:48:35  src/http/router.ts:24              TODO   normal    -         -           -         -    Generate OpenAPI (and docs site) from route schemas and metadata.
2025-09-08 19:48:35  src/http/router.ts:25              TODO   normal    -         -           -         -    Add automatic HEAD handling for GET routes and 405 Method Not Allowed support.
2025-09-08 19:48:35  src/http/types.ts:16               TODO   normal    -         -           -         -    add path params when router supports it
2025-09-08 19:48:35  src/http/types.ts:22               TODO   normal    -         -           -         -    Typed context augmentation after middleware (e.g., ctx.user after auth, ctx.body after validation).
2025-09-08 19:48:35  src/lib/result.ts:35               TODO   normal    -         -           -         -    Add unit tests for Result utilities (ok/err/map/flatMap/mapError/fromPromise).
2025-09-08 19:48:35  src/lib/result.ts:36               TODO   normal    -         -           -         -    Consider adding Result helpers: tap, fold, and async variants.
2025-09-08 19:48:35  src/ports/database.ts:4            TODO   normal    -         -           -         -    Implement adapters for Postgres/SQLite (connection pooling, migrations, retries).
2025-09-08 19:48:35  src/ports/database.ts:5            TODO   normal    -         -           -         -    Add transaction support with function-scoped unit of work.
2025-09-08 19:48:35  src/ports/database.ts:14           TODO   normal    -         -           -         -    Add transactional wrapper: transaction<T>(fn: (db: Database) => Promise<Result<T, DatabaseError>>)
2025-09-08 19:48:35  README.md:32                       TODO   low       -         -           -         -    ` - Low priority (shown in gray)
